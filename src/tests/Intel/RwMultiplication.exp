// fn0C00_0000
// Return size: 2
// Mem0:Mem
// fp:fp
// sp:sp
// al:al
// ds:ds
// ax:ax
// SCZO:SCZO
// dx_ax:Sequence dx:ax
// dx:dx
// cx:cx
// cl:cl
// Top:Top
// return address size: 2
define fn0C00_0000
fn0C00_0000_entry:
	sp = fp
	Top = 0<i8>
	// succ:  l0C00_0000
l0C00_0000:
	al = Mem0[ds:0x300<16>:byte]
	ax = Mem0[ds:0x301<16>:byte] *u16 al
	SCZO = cond(ax)
	Mem0[ds:0x302<16>:word16] = ax
	ax = Mem0[ds:0x304<16>:word16]
	dx_ax = Mem0[ds:0x306<16>:word16] *u32 ax
	SCZO = cond(dx_ax)
	Mem0[ds:0x308<16>:word16] = ax
	Mem0[ds:0x30A<16>:word16] = dx
	cx = Mem0[ds:0x30C<16>:word16]
	ax = Mem0[ds:0x30E<16>:word16]
	dx_ax = cx *s32 ax
	SCZO = cond(dx_ax)
	Mem0[ds:0x310<16>:word16] = ax
	Mem0[ds:0x312<16>:word16] = dx
	al = Mem0[ds:0x300<16>:byte]
	cl = Mem0[ds:0x301<16>:byte]
	ax = cl *u16 al
	SCZO = cond(ax)
	Mem0[ds:0x302<16>:word16] = ax
	ax = Mem0[ds:0x304<16>:word16] *s 0x24<16>
	SCZO = cond(ax)
	dx = ax *s 0x24<16>
	SCZO = cond(dx)
	ax = Mem0[ds:0x304<16>:word16] *s 0x114<16>
	SCZO = cond(ax)
	dx = ax *s 0x114<16>
	SCZO = cond(dx)
	ax = Mem0[ds:0x304<16>:word16] *s 0x114<16>
	SCZO = cond(ax)
	return
	// succ:  fn0C00_0000_exit
fn0C00_0000_exit:
