void fn00001000(word32 d0, word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] d0:[0..31]
// LiveOut:
// Trashed: CVZNX a0 a1 a2 a3 a4 a5 a6 d0 d1 d2 d3 d4 d5
// Preserved: a7 d7
fn00001000_entry:
l00001000:
l0000100A:
	word32 a6_9 = Mem0[0x00000004<p32>:word32]
	word32 d2_100 = d0
	word32 a2_277 = a0
	branch Mem0[a6_9 + 20<i32>:word16] >=u 0x24<16> l00001036
l00001020:
	word32 a0_13 = 0x00001494<p32>
	word32 d0_16 = 0xC<32>
l00001030:
	Mem19[a0_13:word32] = 0<32>
	a0_13 = a0_13 + 4<i32>
	d0_16 = d0_16 - 1<32>
	branch d0_16 != 0<32> l00001030
l00001036:
	Mem29[0x00001494<p32>:word32] = fp
	Mem32[0x00001498<p32>:word32] = a6_9
	word32 d0_34 = FindTask(0<32>)
	word32 d0_38 = OpenLibrary(0x000012BC<p32>, 0<i32>)
	branch d0_38 == 0<32> l00001226
l00001226:
	Alert(0x38007<32>)
l00001056:
	word32 d4_72
	Mem65[0x0000149C<p32>:word32] = d0_38
	branch Mem65[d0_34 + 172<i32>:word32] != 0<32> l00001066
l00001066:
	word32 a0_71 = a0
	d4_72 = 3<i32>
l0000106A:
	branch Mem65[a0_671:byte] != 0x20<8> l00001072
l00001070:
	d4_72 = SEQ(SLICE(d4_72, word16, 16), SLICE(d4_72, word16, 0) + 1<16>)
l00001072:
	a0_71 = a0_671 + 1<i32>
	a0_671 = a0_71
	branch Mem65[a0_671:byte] != 0<8> l0000106A
l00001060:
	d4_72 = 2<i32>
	d2_100 = 8<i32>
l00001076:
	word32 d0_98 = d4_72 << 2<32>
	word32 d0_105 = d0_98 + d2_100
	word32 d1_109 = 0x10001<32>
	word32 d0_110 = AllocMem(d0_105 + 0x11<32>, 0x10001<32>)
	branch d0_110 == 0<32> l0000123E
l0000123E:
	CloseLibrary(Mem65[0x0000149C<p32>:word32])
	Alert(0x10000<32>)
l0000125C:
	branch Mem153[d0_34 + 172<i32>:word32] != 0<32> l00001268
l00001262:
	fn0000126C(fn00001214(d0_34))
l00001268:
	return
l00001096:
	word32 dwLoc0C_528
	word32 a0_426
	Mem168[d0_110:word32] = d0_105 + 0x11<32>
	Mem171[d0_110 + 12<i32>:word32] = d4_72 - 1<32>
	Mem174[d0_110 + 8<i32>:word32] = d0_110 + 16<i32> + d0_98
	Mem176[0<32>:word32] = 0<32>
	word32 d0_177 = Mem176[d0_34 + 172<i32>:word32]
	branch d0_177 == 0<32> l00001190
l00001190:
	word32 d0_181 = fn00001214(d0_34)
	Mem183[0x000014A0<p32>:word32] = d0_181
	Mem184[0x000014A4<p32>:word32] = d0_181
	Mem188[0<32>:word32] = 0<32>
	dwLoc0C_528 = d0_181
	branch Mem188[d0_181 + 36<i32>:word32] == 0<32> l000011B6
l000011AE:
	Enable()
l000011B6:
	word32 d0_202 = Supervisor(d0_110)
	Mem203[d0_110 + 4<i32>:word32] = d0_202
	branch d0_202 != 0<32> l000011D2
l000011D2:
	Mem207[0x000014A8<p32>:word32] = d0_202
	Mem208[0x000014AC<p32>:word32] = d0_202
	Mem209[0x000014B0<p32>:word32] = d0_202
	Mem211[d0_34 + 156<i32>:word32] = d0_202
	Mem212[d0_34 + 160<i32>:word32] = d0_202
	word32 d0_216 = Mem212[(d0_202 << 2<32>) + 8<i32>:word32]
	branch d0_216 == 0<32> l000011F4
l000011F0:
	Mem219[d0_34 + 164<i32>:word32] = d0_216
l000011F4:
l000011CC:
l000011CE_thunk_fn0000127C:
	fn0000127C()
	return
l000010B6:
	word32 d0_240 = Mem176[(d0_177 << 2<32>) + 16<i32>:word32]
	word32 a1_243 = Mem176[d0_110 + 8<i32>:word32]
	word32 a0_248 = (d0_240 << 2<32>) + 1<i32>
	Mem251[a0_248 + CONVERT(Mem176[d0_240 << 2<32>:byte], byte, uint32):byte] = 0<8>
	Mem252[d0_110 + 16<i32>:word32] = a0_248
	word32 a6_253 = d0_110 + 20<i32>
	word32 d3_254 = 1<i32>
	word32 a0_259 = a0 + d2_100
l000010DA:
	a0_259 = a0_259 - 1<i32>
	branch Mem252[a0_259:byte] >u 0x20<8> l000010E2
l000010DE_1:
	word16 v29_267 = SLICE(d2_100, word16, 0)
	d2_100 = SEQ(SLICE(d2_100, word16, 16), v29_267 - 1<i16>)
	branch v29_267 != 0<16> l000010DA
l000010E2:
	Mem272[a0_259 + 1<i32>:byte] = 0<8>
l000010E6:
	byte v31_279 = Mem278[a2_277:byte]
	a2_277 = a2_277 + 1<i32>
	d1_109 = SEQ(SLICE(d1_109, word24, 8), v31_279)
	branch v31_279 == 0<8> l00001148
l000010EA:
	branch v31_279 == 0x20<8> l000010E6
l000010F0:
	branch v31_279 == 9<8> l000010E6
l000010F6:
	branch d3_254 - Mem278[d0_110 + 12<i32>:word32] == 0<32> l00001148
l000010FC:
	Mem299[a6_253:word32] = a1_243
	a6_253 = a6_253 + 4<i32>
	d3_254 = SEQ(SLICE(d3_254, word16, 16), SLICE(d3_254, word16, 0) + 1<16>)
	branch v31_279 == 0x22<8> l0000111A
l0000111A:
	byte v50_310 = Mem309[a2_277:byte]
	word24 v51_313 = SLICE(d1_109, word24, 8)
	a2_277 = a2_277 + 1<i32>
	d1_109 = SEQ(v51_313, v50_310)
	branch v50_310 == 0<8> l00001148
l0000111E:
	branch v50_310 == 0x22<8> l00001116
l00001124:
	branch v50_310 != 0x2A<8> l00001144
l0000112A:
	byte v54_323 = Mem309[a2_277:byte]
	a2_277 = a2_277 + 1<i32>
	d1_109 = SEQ(v51_313, v54_323)
	branch (v54_323 & 0xDF<8>) != 0x4E<8> l0000113C
l0000113C:
	branch (v54_323 & 0xDF<8>) != 0x45<8> l00001144
l00001142:
	d1_109 = 27<i32>
l00001138:
	d1_109 = 10<i32>
l00001144:
	Mem348[a1_243:byte] = SLICE(d1_109, byte, 0)
	a1_243 = a1_243 + 1<i32>
l00001106:
	Mem352[a1_243:byte] = v31_279
	a1_243 = a1_243 + 1<i32>
l00001108:
	byte v40_357 = Mem356[a2_277:byte]
	a2_277 = a2_277 + 1<i32>
	d1_109 = SEQ(SLICE(d1_109, word24, 8), v40_357)
	branch v40_357 == 0<8> l00001148
l00001148:
	Mem366[a1_243:byte] = 0<8>
	Mem371[a6_253:word32] = 0<32>
	Mem396[0x000014A8<p32>:word32] = execPrivate4()
	word32 d0_397 = execPrivate5()
	Mem398[0x000014AC<p32>:word32] = d0_397
	dwLoc0C_528 = d0_110 + 16<i32>
	dwLoc10 = d3_254
	branch Mem398[Mem398[0x00001498<p32>:word32] + 20<i32>:word16] <u 0x24<16> l0000117A
l00001172:
	word32 v64_408 = Mem398[d0_34 + 224<i32>:word32]
	Mem409[0x000014B0<p32>:word32] = v64_408
	branch v64_408 != 0<32> l0000117E
l0000117A:
	Mem414[0x000014B0<p32>:word32] = d0_397
l0000117E:
	branch Mem418[d0_34 + 8<i32>:byte] != 0xD<8> l000011F8
l000011F8:
	a0_426 = Mem424[d0_34 + 58<i32>:word32]
l00001186:
	word32 a0_429 = Mem418[d0_34 + 176<i32>:word32]
	a0_426 = a0_429 + 4<i32> - Mem418[a0_429:word32]
l00001202:
	Mem439[0x000014BC<p32>:word32] = a0_426
	Mem446[0x000014C0<p32>:word32] = fp - 16<i32>
	fn00001354(dwLoc10, dwLoc0C_528)
l00001212_thunk_fn0000127C:
	fn0000127C()
	return
fn00001000_exit:
l0000110C:
	branch v40_357 == 0x20<8> l00001116
l00001116:
	Mem478[a1_243:byte] = 0<8>
	a1_243 = a1_243 + 1<i32>
l00001112:
	Mem485[a1_243:byte] = v40_357
	a1_243 = a1_243 + 1<i32>


word32 fn00001214(word32 a3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00001000
// MayUse:  a3:[0..31]
// LiveOut: d0
// Trashed: a0 d0
// Preserved: a7
fn00001214_entry:
l00001214:
	WaitPort(a3 + 92<i32>)
	return GetMsg(a3 + 92<i32>)
fn00001214_exit:


void fn0000126C(word32 a2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00001000
// MayUse:  a2:[0..31]
// LiveOut:
// Trashed: a1 d0
// Preserved: a7
fn0000126C_entry:
l0000126C:
	Forbid()
	ReplyMsg(a2)
	return
fn0000126C_exit:


void fn00001278(word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000012D0
// MayUse:  Stack +0004:[0..31]
// LiveOut:
// Trashed: CVZN a1 a2 a4 a5 a6 d0 d1 d2
// Preserved: a7
fn00001278_entry:
l00001278:
l00001278_thunk_fn0000127C:
	fn0000127C()
	return
fn00001278_exit:


void fn0000127C()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00001000
//      fn00001278
// MayUse: 
// LiveOut:
// Trashed: CVZN a1 a2 a4 a5 a6 a7 d0 d1
// Preserved:
fn0000127C_entry:
l0000127C:
	word32 a7_6 = Mem0[0x00001494<p32>:word32]
	word32 v7_11 = Mem0[a7_6 - 4<i32>:word32]
	word32 v5_8 = Mem0[a7_6 - 8<i32>:word32]
	branch Mem0[v7_11 + 4<i32>:word32] == 0<32> l0000129E
l00001296:
	execPrivate1()
l0000129E:
	CloseLibrary(Mem0[0x0000149C<p32>:word32])
	branch v5_8 == 0<32> l000012B0
l000012AE:
	fn0000126C(v5_8)
l000012B0:
	FreeMem(v7_11, Mem0[v7_11:word32])
	return
fn0000127C_exit:


void fn000012D0(word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000131C
// MayUse:  Stack +0004:[0..31]
// LiveOut:
// Trashed: CVZNX a1 a4 a5 a6 d0 d1
// Preserved: a2 a3 a7 d2
fn000012D0_entry:
l000012D0:
	branch false l00001308
l000012E2:
	word32 d2_16 = 1<i32>
	branch Mem11[0x000014D4<p32>:word32] == 0<32> l000012F6
l000012EA:
	d2_16 = d2_16 + 1<32>
	branch Mem11[0x000014D0<p32> + (d2_16 << 2<32>):word32] != 0<32> l000012EA
l000012F6:
	word32 d2_33 = d2_16 - 1<32>
	branch d2_33 == 0<32> l00001308
l000012FA:
	word32 d0_38 = d2_33 << 2<32>
	call Mem11[0x000014D0<p32> + d0_38:word32] (retsize: 4;)
		uses: d0:d0_38,Stack +0014:dwArg04
	d2_33 = d2_33 - 1<32>
	branch d2_33 != 0<32> l000012FA
l00001308:
	fn00001278(dwArg04)
	return
fn000012D0_exit:


void fn0000131C(word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00001354
// MayUse:  Stack +0004:[0..31]
// LiveOut:
// Trashed: CVZN a1 a4 a5 a6 d0 d1
// Preserved: X a2 a3 a7
fn0000131C_entry:
l0000131C:
	branch Mem8[0x000014C4<p32>:word32] != 0<32> l0000134E
l00001328:
	word32 a3_13 = Mem8[0x000014D8<p32>:word32]
	Mem15[0x000014C4<p32>:word32] = 1<i32>
	branch a3_13 == 0<32> l00001346
l0000133A:
	call Mem15[a3_13 + 4<i32>:word32] (retsize: 4;)
		uses: d0:a3_25,Stack +0010:dwArg04
	a3_13 = Mem15[a3_13:word32]
	branch a3_13 != 0<32> l0000133A
l00001346:
	fn000012D0(dwArg04)
l0000134E:
	return
fn0000131C_exit:


void fn00001354(word32 dwArg04, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00001000
// MayUse:  Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut:
// Trashed: CVZNX a0 a1 a4 a5 a6 d0 d1
// Preserved: a2 a3 a7
fn00001354_entry:
l00001354:
	word32 a3_17 = 0x000014CC<p32>
	branch false l00001372
l00001366:
	branch Mem8[0x000014CC<p32>:word32] == 0<32> l00001372
l0000136A:
	call Mem8[a3_17:word32] (retsize: 4;)
		uses: Stack +0010:dwArg04,Stack +0014:dwArg08
	a3_17 = a3_17 + 4<i32>
	branch Mem8[a3_17:word32] != 0<32> l0000136A
l00001372:
	fn0000131C(fn00001468())
	return
fn00001354_exit:


word32 fn00001390(word32 dwArg04, word32 dwArg08, word32 dwArg0C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00001468
// MayUse:  Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31]
// LiveOut: d0
// Trashed: CVZNX a0 a1 d0 d1
// Preserved: a2 a3 a4 a7 d2 d3 d4 d5 d6
fn00001390_entry:
l00001390:
	word32 d4_141 = 0<i32>
l0000145A:
	branch d4_141 < 5<i32> l000013A6
l000013A6:
	word32 d3_138 = 0<i32>
l00001450:
	branch d3_138 < 4<i32> l000013AC
l000013AC:
	word32 d2_136 = 0<i32>
l00001446:
	branch d2_136 < 4<i32> l000013B2
l000013B2:
	word32 d1_64 = __swap(20<i32>) *u32 SLICE(d2_136, word16, 0)
	word32 a1_79 = dwArg08 + (SLICE(d2_136, word16, 0) *u32 20<i32> + SEQ(SLICE(__swap(SEQ(SLICE(d1_64, word16, 16), SLICE(d1_64 + __swap(d2_136) *u32 0x14<16>, word16, 0))), word16, 16), 0<16>)) + (d3_138 << 2<32>)
	word32 d0_81 = Mem80[dwArg04 + (d4_141 << 4<32>) + (d2_136 << 2<32>):word32]
	word32 d1_82 = Mem80[a1_79:word32]
	word32 d5_87 = __swap(d0_81) *u32 SLICE(d1_82, word16, 0)
	word32 d0_96 = d0_81 *u32 SLICE(d1_82, word16, 0) + SEQ(SLICE(__swap(SEQ(SLICE(d5_87, word16, 16), SLICE(d5_87 + __swap(d1_82) *u32 SLICE(d0_81, word16, 0), word16, 0))), word16, 16), 0<16>)
	word32 d5_102 = __swap(20<i32>) *u32 SLICE(d4_141, word16, 0)
	word32 d0_116 = d0_96 + Mem80[(dwArg0C + (SLICE(d4_141, word16, 0) *u32 20<i32> + SEQ(SLICE(__swap(SEQ(SLICE(d5_102, word16, 16), SLICE(d5_102 + __swap(d4_141) *u32 0x14<16>, word16, 0))), word16, 16), 0<16>))) + (d3_138 << 2<32>):word32]
	word32 d5_122 = __swap(20<i32>) *u32 SLICE(d4_141, word16, 0)
	Mem135[dwArg0C + (SLICE(d4_141, word16, 0) *u32 20<i32> + SEQ(SLICE(__swap(SEQ(SLICE(d5_122, word16, 16), SLICE(d5_122 + __swap(d4_141) *u32 0x14<16>, word16, 0))), word16, 16), 0<16>)) + (d3_138 << 2<32>):word32] = d0_116
	d2_136 = d2_136 + 1<32>
l0000144E:
	d3_138 = d3_138 + 1<32>
l00001458:
	d4_141 = d4_141 + 1<32>
l00001462:
	return 5<i32>
fn00001390_exit:


word32 fn00001468()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00001354
// MayUse: 
// LiveOut: d0
// Trashed: CVZNX a0 a1 d0 d1
// Preserved: a7
fn00001468_entry:
l00001468:
	return fn00001390(fp + -240<i32>, fp + -160<i32>, fp + -80<i32>)
fn00001468_exit:


