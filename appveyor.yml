version: 0.9.2.{build}

init: 
  - git config --global core.autocrlf true 
 # The commented out line below displays RDP details for debugging on an AppVeyor VM
 # - ps: iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))

image: Visual Studio 2019
platform: x64

configuration: Release

# If you want more build spew, change the verbosity below
build:
  project: src/Reko-decompiler.sln
  verbosity: minimal

environment:
  artifacts_dir: bin

build_script:
  - cmd: dotnet msbuild -p:Platform=%PLATFORM% -p:Configuration=%CONFIGURATION% -t:build_solution ./src/BuildTargets/BuildTargets.csproj

# //$HACK: we've had to hard-wire the 'netcoreapp3.1' here.
after_build:
  - ps : >-
        $shortHash = $env:APPVEYOR_REPO_COMMIT.Substring(0, 10);
        $version = ls ./src/Drivers/WindowsDecompiler/bin/$env:PLATFORM/$env:CONFIGURATION/netcoreapp3.1/Reko.Core.dll | % VersionInfo | % ProductVersion;
        mkdir $env:artifacts_dir;
        ;
        <# zip WindowsDecompiler and CmdLine, append version and short hash #>;
        "[after_build] compressing WindowsDecompiler...";
        7z a $env:artifacts_dir/WindowsDecompiler-$version-$shortHash.zip ./src/Drivers/WindowsDecompiler/bin/$env:PLATFORM/$env:CONFIGURATION/netcoreapp3.1/.;
        "[after_build] compressing CmdLine...";
        7z a $env:artifacts_dir/CmdLine-$version-$shortHash.zip ./src/Drivers/CmdLine/bin/$env:PLATFORM/$env:CONFIGURATION/netcoreapp3.1/.;
        mv ./src/WixInstaller/bin/$env:PLATFORM/$env:CONFIGURATION/*.msi ./$env:artifacts_dir/;
        ;
        <# Append the short hash to the .msi setup #>;
        $filePath = $env:artifacts_dir + "/*.msi";
        $item = Get-Item $filePath;
        $newPath = $item.DirectoryName + "/" + $item.BaseName + "-" + $shortHash + ".msi";
        "[after_build] renaming $filePath -> $newPath";
        mv $filePath $newPath;

test_script:
  - cmd: dotnet msbuild -p:Platform=%PLATFORM% -p:Configuration=%CONFIGURATION% -t:run_unit_tests ./src/BuildTargets/BuildTargets.csproj
  - cmd: dotnet msbuild -p:Platform=%PLATFORM% -p:Configuration=%CONFIGURATION% -t:run_regressions ./src/BuildTargets/BuildTargets.csproj

artifacts:
  - path: bin/*.msi
    name: Reko installer
  - path: bin/WindowsDecompiler-*.zip
    name: Reko WinForms driver
  - path: bin/CmdLine-*.zip
    name: Reko CmdLine driver

#on_finish:
# The commented out line below displays will keep the AppVeyor VM alive long enough for a RDP diagnostic
# session
#  - ps: $blockRdp = $true; iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))
